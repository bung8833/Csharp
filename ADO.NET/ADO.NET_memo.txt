2023 Jan 03
ADO.NET <- 底層

Entity Framework <- MVC會教
Dapper <- 可以自學

面試準備SQL:
Join
Group

建立資料表 參考範例練習

Users		SQL Server

U1		DB1
U2		DB2
U3		DB3

sa(預設最高權限)

sa5 (iSpan202301, sa5, sa5)

建立table後無法修改存檔 -> tools designer 取消防止...

table task 資料庫右鍵 -> 產生指令scrip

connectstrings

字型
JetBrain.Mono >=
Source code pro

專題每個畫面 一張A5 寫編號






2023 Jan 04

針對SQL statement
先在SQL Server寫好
再貼到VS

SqlDataReader
一定要保持連線才能用，且傳回的是Data的索引值(較快)

--------  <-- (一開始的位置
1      |
--------  <-- (每次Read往下移動
2      |
--------
3      |
--------
4      |
--------


SQL Injection 寫惡意語法 偷窺 破壞資料 原因: 寫SQL時串接語法
SQL語法 切記不要組合字串
登入程式 寫法

DateTime dt = new DateTime(2023, 1, 4);
DateTime.AddDays(1)

百元買百雞 練習作業
公   5元/隻
母   3元/隻
小雞 1元/3隻
--每種雞都要買

技巧:
按住Ctrl->拖曳
檢視->定位順序

筆記:
notion
HackMD










2023 Jan 05

寫在Class裡面
不要有magic number
不要把運算和呈現(print)寫在一起 否則無法給別人(如winForm)
較好的方式: 傳回 string 讓呼叫者print使用

重視：維護性 可擴展性
變數名稱 好懂
變數、欄位要小寫開頭


// decimal 小數點用十進位為計算


---------------------------

Class Plan { // 購買計畫
	RoosterCount {get; set;}
	HenCount {get; set;}
	ChickCount {get; set;}
}

Class Product {
	decimal 
}

List<Plan> Calc(int totalCount,
		int budget,
		Product product)

---------------------------


SqlDbType.Bit
0 or 1  -->  true or false


SQL @參數名稱
C# 變數不寫底線

委派
Func<SqlConnection>

扭蛋機 作業


















2023 Jan 06


SnagIt 截圖

程式碼產生器
List<String> {xxx, yyy, zzz}

SQL 語法寫錯
debug方式 執行後檢視sql 貼到記事本檢查

SQL Server
table設計 將Id(及主鍵)的
識別規格開啟 自動替主鍵編上不重複且遞增的號碼

SQL Server
Server Name
Server=.;
Server=RICHARD\SQLEXPRESS;


















2023 Jan 09
打字軟體/網站 練習

SQL Express

SQL Server 社群版 <--裝這個!


面試 說有用介面 用在哪裡

sql語法 欄位5個一行

----------------
三層式架構 表現層UI 資料邏輯層BLL 資料存取層DAL


UI 可以寫驗證(null, 超出範圍等)

BLL (檢查合理性)
e.g. 生理假, 年假不夠, 購買數量 <= 0

UI層 ViewModel

三層式架構 呈現商品清單
單一職責原則
50個報表 每個寫一個class


Vm 驗證 
必填 -> 要填
長度、email等 -> 沒寫就不檢查

用三層式寫專題 -> 會員管理









2023 Jan 10

將4個table都寫成三層式


進入點的表單關閉 -> 系統關閉


專題 同一組
命名方式 字體大小 等等 要統一



LINQ Cast<>

科技廠35k? 半導體 人力派遣 博弈業



銀行業 stored procedure


一般公司 
1. Entity Framework // 要會LINQ

2. Dapper套件 // 只要寫sql語法 不用生成parameters
	      // 面試要會sql select join insert update delete


老舊公司 ADO.NET



偷學公司程式架構
工作之後 可以學資料結構、演算法 (Yeah!


Form
max size
min size

start position!!!



------------------------

Main
P1.Throw(P2)

GameResult Throw(this Player)
{
    //todo
}


剪刀	石頭	布	剪刀

Linked List
單向
雙向

------------------------
State Pattern

要解決的問題：
有很多種狀態
有很多種操作
// 專案資料夾

扭蛋機: 
若UI有設計好 SatndByState不會讓客人選擇退幣
所以可以丟出例外
->重點: WinForm設計



------------------------


偽數據: 讓錯誤的狀態直接return
少一層if







